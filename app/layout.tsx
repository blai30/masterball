import type { Metadata, Viewport } from 'next'
import { Geist, Inter, JetBrains_Mono, Sofia_Sans } from 'next/font/google'
import './globals.css'
import clsx from 'clsx/lite'
import { ThemeProvider } from 'next-themes'
import Header from '@/components/shared/Header'
import Script from 'next/script'

const geist = Geist({
  variable: '--font-geist',
  subsets: ['latin'],
  display: 'swap',
})

const inter = Inter({
  variable: '--font-inter',
  subsets: ['latin'],
  display: 'swap',
})

const jetBrainsMono = JetBrains_Mono({
  variable: '--font-jetbrains-mono',
  subsets: ['latin'],
  display: 'swap',
})

const sofiaSans = Sofia_Sans({
  variable: '--font-sofia-sans',
  subsets: ['latin'],
  display: 'swap',
})

export const metadata: Metadata = {
  title: 'Masterball',
  description: 'Generated by create next app',
  openGraph: {
    type: 'website',
    locale: 'en_US',
    url: 'https://blai30.github.io/masterball/',
    images: [
      {
        url: 'https://blai30.github.io/masterball/favicon.png',
        width: 128,
        height: 128,
        alt: 'Masterball',
      },
    ],
  },
  twitter: {
    card: 'summary',
  },
  authors: [
    {
      name: 'blai30',
      url: 'https://github.com/blai30',
    },
  ],
}

export const viewport: Viewport = {
  colorScheme: 'dark',
  themeColor: '#A25C7E',
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const { NODE_ENV } = process.env

  // Font applied in globals.css.
  return (
    <html
      lang="en"
      suppressHydrationWarning
      className={clsx(
        'scheme-light dark:scheme-dark',
        geist.variable,
        inter.variable,
        jetBrainsMono.variable,
        sofiaSans.variable
      )}
    >
      <head>
        {NODE_ENV !== 'production' && (
          <Script src="https://unpkg.com/react-scan/dist/auto.global.js"></Script>
        )}
      </head>
      <body className="bg-white text-black antialiased dark:bg-black dark:text-white">
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <div className="flex min-h-screen flex-col gap-6 px-4 py-6 print:mx-0 print:max-w-none print:p-0">
            <Header />
            <main className="flex grow flex-col items-center">{children}</main>
            {/* <Footer /> */}
          </div>
        </ThemeProvider>
      </body>
    </html>
  )
}
